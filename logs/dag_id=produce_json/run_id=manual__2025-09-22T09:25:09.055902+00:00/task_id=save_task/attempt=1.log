{"timestamp":"2025-09-22T09:25:13.280168","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-22T09:25:13.280978","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/produce_json.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-22T09:25:13.377589","level":"info","event":"file_cache is only supported with oauth2client<4.0.0","logger":"googleapiclient.discovery_cache"}
{"timestamp":"2025-09-22T09:25:13.415703Z","level":"info","event":"file created","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T09:25:14.080640Z","level":"info","event":"snippet:  None","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T09:25:14.109460Z","level":"info","event":"snippet:  None","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T09:25:14.138528Z","level":"info","event":"snippet:  None","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T09:25:14.169809Z","level":"info","event":"snippet:  None","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T09:25:14.200682Z","level":"info","event":"snippet:  None","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T09:25:14.201844Z","level":"info","event":"le fichier est en écriture","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T09:25:14.202421Z","level":"info","event":"le fichier est sauvegarder","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-22T09:25:14.200928","level":"info","event":"Done. Returned value was: {'status': 200, 'message': \"L'extraction a réussie avec succes\"}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-22T09:25:14.201214","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019970bd-c553-7b6d-be75-332391914d09'), task_id='save_task', dag_id='produce_json', run_id='manual__2025-09-22T09:25:09.055902+00:00', try_number=1, map_index=-1, hostname='be420e6a0b40', context_carrier=None, task=<Task(PythonOperator): save_task>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 9, 22, 9, 25, 13, 246382, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/produce_json/runs/manual__2025-09-22T09%3A25%3A09.055902%2B00%3A00/tasks/save_task?try_number=1')","logger":"task"}
