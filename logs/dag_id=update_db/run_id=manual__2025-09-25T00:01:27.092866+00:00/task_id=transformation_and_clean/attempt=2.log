{"timestamp":"2025-09-25T00:05:28.516144","level":"warning","event":"Could not import pandas. Holidays will not be considered.","logger":"airflow.example_dags.plugins.workday"}
{"timestamp":"2025-09-25T00:05:28.858917","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-09-25T00:05:28.862350","level":"info","event":"Filling up the DagBag from dags/update_db.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-09-25T00:05:29.492315Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-25T00:05:29.496549Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-25T00:05:29.497574Z","level":"info","event":"Current task name:transformation_and_clean","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-25T00:05:29.497838Z","level":"info","event":"Dag name:update_db","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-25T00:05:31.037560Z","level":"info","event":"[<app.models.StagingYoutubeData object at 0x10c188950>]","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-25T00:05:31.037947","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-09-25T00:05:31.214674Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-25T00:05:31.215042Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-09-25T00:05:31.216355Z","level":"info","event":"Task operator:<Task(PythonOperator): transformation_and_clean>","chan":"stdout","logger":"task"}
